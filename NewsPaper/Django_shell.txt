py manage.py makemigrations
py manage.py migrate
py manage.py shell
from news.models import *
user1 = User.objects.create(username='Mike', first_name='Frank')
Author.objects.create(authorUser=user1)
user2 = User.objects.create(username='Sveta', first_name='Kuz')
Author.objects.create(authorUser=user2)
Category.objects.create(name='IT')
Category.objects.create(name='Study')
Category.objects.create(name='News')
Category.objects.create(name='History')
Post.objects.create(author=Author.objects.get(authorUser=User.objects.get(username='Mike')), categoryType='NW', title='111 title', text='111 text')
Post.objects.create(author=Author.objects.get(authorUser=User.objects.get(username='Mike')), categoryType='AR', title='222 title', text='222 text')
Post.objects.create(author=Author.objects.get(authorUser=User.objects.get(username='Mike')), categoryType='AR', title='333 title', text='333 text')
p1=Post.objects.get(pk=1)
p2=Post.objects.get(pk=2)
p3=Post.objects.get(pk=3)
c1=Category.objects.get(name='IT')
c2=Category.objects.get(name='Study')
c3=Category.objects.get(name='News')
c4=Category.objects.get(name='History')
p1.postCategory.add(c1)
p2.postCategory.add(c2, c3)
p3.postCategory.add(c4)
Comment.objects.create(commentUser=User.objects.get(username='Mike'), commentPost=Post.objects.get(pk=1), text='comment text1')
Comment.objects.create(commentUser=User.objects.get(username='Mike'), commentPost=Post.objects.get(pk=2), text='comment text2')
Comment.objects.create(commentUser=User.objects.get(username='Sveta'), commentPost=Post.objects.get(pk=3), text='comment text3')
Comment.objects.create(commentUser=User.objects.get(username='Sveta'), commentPost=Post.objects.get(pk=1), text='comment text4')
Post.objects.get(pk=1).like()
Post.objects.get(pk=1).like()
Post.objects.get(pk=1).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=3).dislike()
Comment.objects.get(pk=1).like()
Comment.objects.get(pk=1).like()
Comment.objects.get(pk=2).like()
Comment.objects.get(pk=3).dislike()
Author.objects.get(authorUser=User.objects.get(username='Mike')).update_rating()
Author.objects.get(authorUser=User.objects.get(username='Sveta')).update_rating()
a=Author.objects.get(authorUser=User.objects.get(username='Mike'))
a.ratingAuthor
best=Author.objects.all().order_by('-ratingAuthor').values('authorUser', 'ratingAuthor')[0]
print(best)
from django.db.models.functions import Left
print(Post.objects.all().order_by('-rating')[0].values('dateCreation', 'author__name__username', 'rating', 'title', new_text=Left('text', 3)))
